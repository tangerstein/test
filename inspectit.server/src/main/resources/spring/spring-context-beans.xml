<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<bean id="indexQueryProvider"
		class="rocks.inspectit.shared.cs.indexing.query.provider.impl.IndexQueryProvider">
		<lookup-method name="createNewIndexQuery" bean="indexQuery" />
	</bean>

	<bean id="storageIndexQueryProvider"
		class="rocks.inspectit.shared.cs.indexing.query.provider.impl.StorageIndexQueryProvider">
		<lookup-method name="createNewStorageIndexQuery" bean="storageIndexQuery" />
	</bean>

	<bean id="problemOccurrenceIndexQueryProvider"
		class="rocks.inspectit.shared.cs.indexing.query.provider.impl.ProblemOccurrenceIndexQueryProvider">
		<lookup-method name="createNewProblemOccurrenceQuery"
			bean="problemOccurrenceIndexQuery" />
	</bean>

	<bean id="streamProvider"
		class="rocks.inspectit.shared.all.storage.nio.stream.StreamProvider">
		<lookup-method name="createExtendedByteBufferOutputStream"
			bean="extendedByteBufferOutputStream" />
		<lookup-method name="createSocketExtendedByteBufferInputStream"
			bean="socketExtendedByteBufferInputStream" />
	</bean>

	<bean id="inputStreamProvider"
		class="rocks.inspectit.shared.cs.storage.nio.stream.InputStreamProvider">
		<lookup-method name="createExtendedByteBufferInputStream"
			bean="extendedByteBufferInputStream" />
	</bean>

	<bean id="serializationManagerProvider"
		class="rocks.inspectit.shared.all.storage.serializer.provider.SerializationManagerProvider">
		<lookup-method name="createSerializer" bean="serializationManager" />
	</bean>

	<bean id="storageWriterProvider" class="rocks.inspectit.server.storage.CmrStorageWriterProvider">
		<lookup-method name="getCmrStorageWriter" bean="cmrStorageWriter" />
	</bean>

	<bean id="storageIndexingTreeProvider"
		class="rocks.inspectit.shared.cs.storage.util.StorageIndexTreeProvider">
		<lookup-method name="getStorageIndexingTree" bean="storageRootBranchFactory" />
	</bean>

	<bean id="IOExecutorService"
		class="rocks.inspectit.shared.cs.storage.util.ExecutorServiceFactory">
		<property name="threadNamePrefix" value="io-executor-service" />
		<property name="daemon" value="true" />
		<property name="executorThreads" value="${storage.ioExecutorThreads}" />
		<property name="beanSingleton" value="true" />
	</bean>

	<bean id="storageExecutorService"
		class="rocks.inspectit.shared.cs.storage.util.ExecutorServiceFactory">
		<property name="threadNamePrefix" value="storage-executor-service" />
		<property name="daemon" value="false" />
		<property name="executorThreads" value="${storage.storageExecutorThreads}" />
		<property name="scheduledExecutor" value="true" />
	</bean>

	<bean id="scheduledExecutorService"
		class="rocks.inspectit.shared.cs.storage.util.ExecutorServiceFactory">
		<property name="threadNamePrefix" value="scheduled-executor-service" />
		<property name="daemon" value="true" />
		<property name="executorThreads" value="5" />
		<property name="scheduledExecutor" value="true" />
		<property name="beanSingleton" value="true" />
	</bean>

	<bean id="socketReadExecutorService"
		class="rocks.inspectit.shared.cs.storage.util.ExecutorServiceFactory">
		<property name="threadNamePrefix" value="socket-read-executor-service" />
		<property name="daemon" value="true" />
		<property name="executorThreads" value="2" />
		<property name="scheduledExecutor" value="false" />
		<property name="beanSingleton" value="true" />
	</bean>

	<bean id="kryoNetObjectSpaceExecutorService"
		class="rocks.inspectit.shared.cs.storage.util.ExecutorServiceFactory">
		<property name="threadNamePrefix" value="kryo-net-object-space-executor-service" />
		<property name="daemon" value="true" />
		<property name="executorThreads" value="3" />
		<property name="scheduledExecutor" value="false" />
		<property name="beanSingleton" value="true" />
	</bean>

	<bean id="forkJoinWorkerThreadFactory"
		class="rocks.inspectit.shared.cs.indexing.util.ForkJoinPoolWorkerThreadFactoryFactory">
		<property name="threadNamePrefix" value="indexingTreeForkJoinThread" />
	</bean>

	<bean id="indexingTreeForkJoinPool"
		class="org.springframework.scheduling.concurrent.ForkJoinPoolFactoryBean">
		<property name="threadFactory" ref="forkJoinWorkerThreadFactory" />
		<property name="uncaughtExceptionHandler" ref="forkJoinPoolExceptionHandler" />
	</bean>

	<bean id="agentServiceExecutorService" class="rocks.inspectit.shared.cs.storage.util.ExecutorServiceFactory">
		<property name="threadNamePrefix" value="agent-service-executor-service" />
		<property name="daemon" value="true" />
		<property name="executorThreads" value="1" />
		<property name="scheduledExecutor" value="false" />
		<property name="beanSingleton" value="true" />
	</bean>

	<bean id="diagnosisService"
		class="rocks.inspectit.server.diagnosis.service.DiagnosisServiceImpl">
		<constructor-arg>
			<util:list value-type="java.lang.String">
				<value>rocks.inspectit.server.diagnosis.service.rules.impl</value>
			</util:list>
		</constructor-arg>
	</bean>



	<bean id="atomicBuffer" class="rocks.inspectit.server.cache.impl.AtomicBuffer">
		<property name="indexingTree">
			<ref bean="indexingTree" />
		</property>
	</bean>
	<bean id="problemOccurenceBuffer" class="rocks.inspectit.server.cache.impl.AtomicBuffer">
		<property name="indexingTree">
			<ref bean="problemOccurrenceIndexingTree" />
		</property>
	</bean>







	<bean id="BufferEvictor" class="rocks.inspectit.server.cache.impl.BufferEvictor">
		<property name="buffer">
			<ref bean="atomicBuffer" />
		</property>
	</bean>
	<bean id="BufferIndexer" class="rocks.inspectit.server.cache.impl.BufferIndexer">
		<property name="buffer">
			<ref bean="atomicBuffer" />
		</property>
	</bean>

	<bean id="BufferAnalyser" class="rocks.inspectit.server.cache.impl.BufferAnalyzer">
		<property name="buffer">
			<ref bean="atomicBuffer" />
		</property>
	</bean>

	<bean id="performanceProblemBufferEvictor" class="rocks.inspectit.server.cache.impl.BufferEvictor">
		<property name="buffer">
			<ref bean="problemOccurenceBuffer" />
		</property>
	</bean>
	<bean id="performanceProblemBufferIndexer" class="rocks.inspectit.server.cache.impl.BufferIndexer">
		<property name="buffer">
			<ref bean="problemOccurenceBuffer" />
		</property>
	</bean>

	<bean id="performanceProblemBufferAnalyser" class="rocks.inspectit.server.cache.impl.BufferAnalyzer">
		<property name="buffer">
			<ref bean="problemOccurenceBuffer" />
		</property>
	</bean>


	<bean id="indexingTree" class="rocks.inspectit.server.indexing.impl.RootBranchFactory" />
	<bean id="problemOccurrenceIndexingTree" class="rocks.inspectit.server.indexing.impl.RootBranchFactory" />


</beans>